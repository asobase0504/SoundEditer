//-----------------------------------------------------------------------------
//
//サウンド
//Author::TAKANO
//
//-----------------------------------------------------------------------------

//--------------------------------------
//インクルードファイル
//--------------------------------------
#include "sound.h"
#include "application.h"
#include "soundmanager.h"
#include <assert.h>

//--------------------------------------
//定数定義
//--------------------------------------
const float VOLUME = 11.0f;
const float PITCH = 11.0f;
const float PROVISION_ZERO = 0.0f;

//--------------------------------------
//コンストラクタ
//--------------------------------------
CSound::CSound()
{
	fvol = 0.0f;
	frate = 0.0f;
}

//--------------------------------------
//デストラクタ
//--------------------------------------
CSound::~CSound()
{
}

//--------------------------------------
//初期化
//--------------------------------------
HRESULT CSound::Init()
{
	fvol = 0.0f;
	frate = 1.0f;

	return S_OK;
}

//--------------------------------------
//終了
//--------------------------------------
void CSound::Uninit()
{
	
}

//--------------------------------------
//ボリュームを上げる
//--------------------------------------
void CSound::volUp(float Up)
{
	if (Up >= VOLUME ||
		Up <= PROVISION_ZERO)
	{//引数に入れた値が規定の数値以上だったらとき

		//プログラムを停止させる
		assert(false);
	}

	if (fvol >= VOLUME)
	{//変更によってボリュームが規定の値より大きくなったら

		//ボリュームを規定の値に設定する
		fvol = VOLUME;
	}

	//ボリュームに代入
	fvol += Up;
}

//--------------------------------------
//ボリュームを下げる
//--------------------------------------
void CSound::volDown(float Down)
{
	if (Down <= -VOLUME ||
		Down >= PROVISION_ZERO)
	{//引数に入れた値が規定の数値以下だったとき

	 //プログラムを停止させる
		assert(false);
	}

	if (fvol <= -VOLUME)
	{//変更によってボリュームが規定の値より小さくなったら

	 //ボリュームを規定の値に設定する
		fvol = -VOLUME;
	}

	//ボリュームに代入
	fvol -= Down;
}

//--------------------------------------
//ピッチを上げる
//--------------------------------------
void CSound::PitchUp(float rateUp)
{
	if (rateUp >= PITCH ||
		rateUp <= PROVISION_ZERO)
	{//引数に入れた値が規定の数値以上だったらとき

	 //プログラムを停止させる
		assert(false);
	}

	if (frate >= PITCH)
	{//変更によってボリュームが規定の値より大きくなったら

	 //ボリュームを規定の値に設定する
		frate = 11.0f;
	}

	//ボリュームに代入
	frate += rateUp;
}

//--------------------------------------
//ピッチを下げる
//--------------------------------------
void CSound::PitchDown(float rateDown)
{
	if (rateDown <= -VOLUME ||
		rateDown >= PROVISION_ZERO)
	{//引数に入れた値が規定の数値以下だったとき

	 //プログラムを停止させる
		assert(false);
	}

	if (fvol <= -VOLUME)
	{//変更によってボリュームが規定の値より小さくなったら

	 //ボリュームを規定の値に設定する
		frate = -VOLUME;
	}

	//ボリュームに代入
	frate -= rateDown;
}
