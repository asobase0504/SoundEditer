//*****************************************************************************
//
// 音源
// Author TakanoMinto
// Author YudaKaito
//
//*****************************************************************************

//=============================================================================
// include
//=============================================================================
#include "sound.h"
#include "../application.h"
#include "soundmanager.h"
#include <assert.h>

//-----------------------------------------------------------------------------
// コンストラクタ
//-----------------------------------------------------------------------------
CSound::CSound()
{
	m_volume = 0.0f;
	m_pitch = 0.0f;
}

//-----------------------------------------------------------------------------
// デストラクタ
//-----------------------------------------------------------------------------
CSound::~CSound()
{
}

//-----------------------------------------------------------------------------
// 初期化
//-----------------------------------------------------------------------------
HRESULT CSound::Init()
{
	m_volume = CSoundManager::MASTER_VOLUME;
	m_pitch = 1.0f;

	return S_OK;
}

//-----------------------------------------------------------------------------
// 更新
//-----------------------------------------------------------------------------
void CSound::Update()
{
	XAUDIO2_VOICE_STATE xa2state;
	m_apSourceVoice->GetState(&xa2state);
	if (xa2state.BuffersQueued == 0)
	{
		Uninit();
	}
}

//-----------------------------------------------------------------------------
// 終了
//-----------------------------------------------------------------------------
void CSound::Uninit()
{
	if (m_apSourceVoice != nullptr)
	{
		// 一時停止
		m_apSourceVoice->Stop(0);

		// ソースボイスの破棄
		m_apSourceVoice->DestroyVoice();
		m_apSourceVoice = nullptr;

	}
}

//-----------------------------------------------------------------------------
// 再生
//-----------------------------------------------------------------------------
HRESULT CSound::Play()
{
	// 再生
	m_apSourceVoice->SetVolume(m_volume * CSoundManager::MASTER_VOLUME);
	m_apSourceVoice->Start(0);

	return S_OK;
}

//-----------------------------------------------------------------------------
// 停止
//-----------------------------------------------------------------------------
void CSound::Stop()
{
	Uninit();
}

//-----------------------------------------------------------------------------
// ボリュームの設定
//-----------------------------------------------------------------------------
void CSound::SetVolume(const float inVolume)
{
	m_volume = inVolume;
	m_apSourceVoice->SetVolume(inVolume * CSoundManager::MASTER_VOLUME);
}

//-----------------------------------------------------------------------------
// ピッチの設定
//-----------------------------------------------------------------------------
void CSound::SetPitch(const float inPitch)
{
	m_pitch = inPitch;
	m_apSourceVoice->SetFrequencyRatio(inPitch);
}
